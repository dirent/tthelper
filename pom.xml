<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0">
    <modelVersion>4.0.0</modelVersion>
    <groupId>de.dirent</groupId>
    <artifactId>tthelper</artifactId>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>
    <name>tthelper Web Application (realized with Tapestry 5)</name>

    <dependencies>

		<!-- Hibernate dependencies -->
        <dependency>
            <groupId>org.apache.tapestry</groupId>
            <artifactId>tapestry-hibernate</artifactId>
            <version>5.1.0.5</version>
            <!-- exclude jars incompatible with Java 8 -->
			<exclusions>
				<exclusion>
					<groupId>javassist</groupId>
					<artifactId>javassist</artifactId>
				</exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>hsqldb</groupId>
            <artifactId>hsqldb</artifactId>
            <version>1.8.0.7</version>
        </dependency>
        <dependency>
            <groupId>javax.transaction</groupId>
            <artifactId>jta</artifactId>
            <version>1.1</version>
        </dependency>
        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>3.18.2-GA</version>
        </dependency>		
        <!-- Tapestry Acegi dependencies -->
		<dependency>
			<groupId>org.acegisecurity</groupId>
			<artifactId>acegi-security</artifactId>
			<version>1.0.6</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-remoting</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jdbc</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-support</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.acegisecurity</groupId>
			<artifactId>acegi-security-tiger</artifactId>
			<version>1.0.6</version>
		</dependency>
		<!-- Instead of spring-remoting -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>2.0.7</version>
		</dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
            <version>2.0.4</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-dao</artifactId>
            <version>2.0.4</version>
        </dependency>

        <!-- A dependency on either JUnit or TestNG is required, or the surefire plugin (which runs the tests)
             will fail, preventing Maven from packaging the WAR. Tapestry includes a large number
             of testing facilities designed for use with TestNG (http://testng.org/), so it's recommended. -->
        <dependency>
            <groupId>org.testng</groupId>
            <artifactId>testng</artifactId>
            <version>5.1</version>
            <classifier>jdk15</classifier>
            <scope>test</scope>
        </dependency>


		<!--
		Provided
		-->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.4</version>
			<scope>provided</scope>
		</dependency>
		
    </dependencies>
    <build>
    
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<filtering>true</filtering>
				<includes>
					<include>**/*.properties</include>
					<include>**/*.library</include>
					<include>**/*.jwc</include>
					<include>**/*.tml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<filtering>false</filtering>
				<includes>
					<include>**/*.script</include>
					<include>**/*.css</include>
					<include>**/*.js</include>
					<include>**/*.png</include>
				</includes>
			</resource>
		</resources>
    
        <finalName>tthelper</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <encoding>utf-8</encoding>
                    <source>1.5</source>
                    <target>1.5</target>
                </configuration>
            </plugin>

            <!-- Run the application using "mvn jetty:run" -->
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>maven-jetty-plugin</artifactId>
                <configuration>
                    <!-- Log to the console. -->
                    <requestLog implementation="org.mortbay.jetty.NCSARequestLog">
                        <!-- This doesn't do anything for Jetty, but is a workaround for a Maven bug
                             that prevents the requestLog from being set. -->
                        <append>true</append>
                    </requestLog>
                </configuration>
            </plugin>


            <!-- This changes the WAR file packaging so that what would normally go into WEB-INF/classes
             is instead packaged as WEB-INF/lib/tthelper.jar.  This is necessary for Tapestry
             to be able to search for page and component classes at startup. Only
             certain application servers require this configuration, please see the documentation
             at the Tapestry 5 project page (http://tapestry.apache.org/tapestry5/). -->

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <configuration>
                    <archiveClasses>true</archiveClasses>
                </configuration>
            </plugin>
        </plugins>
    </build>
    
    <reporting>
        
        <!-- Adds a report detailing the components, mixins and base classes defined by this module. -->        
        <plugins>
            <plugin>
                <groupId>org.apache.tapestry</groupId>
                <artifactId>tapestry-component-report</artifactId>
                <version>${tapestry-release-version}</version>
                <configuration>
                    <rootPackage>de.dirent.tthelper</rootPackage>
                </configuration>
            </plugin>
        </plugins>
    </reporting>

  <repositories>
    <!-- This can be commented out when the tapestry-release-version is a not a snapshot.
         The non-snapshot Tapestry artifacts are distributed through the central
         repository at ibiblio. 
    <repository>
      <id>tapestry-snapshots</id>
      <url>http://tapestry.formos.com/maven-snapshot-repository/</url>
    </repository>
	-->

    <repository>
        <id>central.maven</id>
        <url>http://central.maven.org/maven2/</url>
    </repository>
    <repository>
    	<id>localhost.nu</id>
    	<url>http://www.localhost.nu/java/mvn</url>
    </repository>
  </repositories>
  
  <pluginRepositories>
    
    <!-- As above, this can be commented out when access to the snapshot version
         of a Tapestry Maven plugin is not required. 
    <pluginRepository>
      <id>tapestry-snapshots</id>
      <url>http://tapestry.formos.com/maven-snapshot-repository/</url>
    </pluginRepository>
    -->
  </pluginRepositories>
  
</project>
